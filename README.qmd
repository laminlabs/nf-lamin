---
title: nf-lamin plugin
format: gfm
engine: knitr
---

```{r setup, include=FALSE}
Sys.setenv(NXF_ANSI_LOG = "false")
Sys.setenv(NXF_VER = "24.10.5")
```

A Nextflow plugin that integrates [LaminDB](https://github.com/laminlabs/lamindb) data provenance into Nextflow workflows.

## Installation

To install a development build of the plugin, run the following command:

```bash
make install
```

To uninstall the plugin, run the following command:

```bash
make uninstall
```

## Usage

To use the plugin in a Nextflow workflow, create a Nextflow config `nextflow.config` that specifies which LaminDB instance to use and an API key:

```groovy
plugins {
  id 'nf-lamin'
}

lamin {
  instance = "laminlabs/lamindata"
  api_key = secrets.LAMIN_API_KEY
}
```

:::{.callout-tip}
If you haven't done so already, you'll need to define the `LAMIN_API_KEY` secret in your Nextflow configuration:

* Fetch a Lamin API key from your [Lamin Hub account settings](https://lamin.ai/settings).
* Run the command `nextflow secrets set LAMIN_API_KEY "..."` to set the secret in your Nextflow configuration.
:::


### Example with nf-core/scrnaseq workflow:

```bash
nextflow run nf-core/scrnaseq \
  -latest -resume \
  -r 2.7.1 \
  -profile docker \
  -plugins nf-lamin@0.1.0 \
  --input https://github.com/nf-core/test-datasets/raw/scrnaseq/samplesheet-2-0.csv \
  --fasta https://github.com/nf-core/test-datasets/raw/scrnaseq/reference/GRCm38.p6.genome.chr19.fa \
  --gtf https://github.com/nf-core/test-datasets/raw/scrnaseq/reference/gencode.vM19.annotation.chr19.gtf \
  --protocol 10XV2 \
  --skip_emptydrops \
  --publish_dir gs://di-temporary-public/scratch/temp-scrnaseq
```

### Example with Viash Hub workflow:

```{bash}
date > /tmp/lamin-test.txt

nextflow run https://packages.viash-hub.com/vsh/toolbox.git \
  -revision v0.1.1 \
  -main-script target/nextflow/bgzip/main.nf \
  -profile docker \
  -plugins nf-lamin@0.1.0 \
  -latest \
  --input /tmp/lamin-test.txt \
  --output output.gz \
  --publish_dir gs://di-temporary-public/scratch/temp-nf-lamin/run_$(date +%Y%m%d_%H%M%S)
```

:::{.callout-note}
Replace the `--publish_dir` with a valid path to a cloud bucket for this example to work.
:::

Logs produced by lamin:

```{bash echo=FALSE}
gawk '
/[0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9][0-9] \[[^\]]+\]/ {
  if ($0 ~ /nextflow\.lamin/) {
    do_print=1
  } else {
    do_print=0
  }
}
do_print {
  gsub(/.*\[main\] /, "")
  print
}
' .nextflow.log
```

## Settings

The plugin supports the following settings in the `nextflow.config` file:

```groovy
lamin {
  // The LaminDB instance to use
  instance = "laminlabs/lamindata"
  // The API key for the LaminDB instance
  api_key = secrets.LAMIN_API_KEY
  // The project name in LaminDB
  project = "your-lamin-project"
  // The environment name in LaminDB
  env = "prod"
  // The Supabase API URL for the LaminDB instance (if env is set to null)
  supabase_api_url = "https://your-supabase-api-url.supabase.co"
  // The Supabase anon key for the LaminDB instance (if env is set to null)
  supabase_anon_key = secrets.SUPABASE_ANON_KEY
}
```

In addition to the above settings, you can also set the following environment variables:

```bash
export LAMIN_INSTANCE="laminlabs/lamindata"
export LAMIN_API_KEY="your-lamin-api-key"
export LAMIN_PROJECT="your-lamin-project"
export LAMIN_ENV="prod"
export LAMIN_SUPABASE_API_URL="https://your-supabase-api-url.supabase.co"
export LAMIN_SUPABASE_ANON_KEY="your-supabase-anon-key"
```

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md) for more information about contributing to this repository.
